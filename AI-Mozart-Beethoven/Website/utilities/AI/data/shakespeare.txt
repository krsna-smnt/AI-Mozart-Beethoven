#include <iostream>
#include <vector>
#include <string>
#include <cstring>
#include <queue>

using namespace std;

const int N = 26;

typedef struct trnode{
	int f;
	vector<trnode*> ptr;

} *trptr;

int pos(char ch)
{
	return ch - 97;
}

int retrieve(trptr t, string str)
{
	for(int i = 0; i < str.size(); i++)
	{
		if(t == nullptr)
			return 0;

		t = t->ptr[pos(str[i])];
	}

	if(t != nullptr && t->f)
		return 1;
	else
		return 0;
}

void insertion(trptr& t, string str)
{
	for(int i = 0; i < str.size(); i++)
	{
		if(t->ptr[pos(str[i])] == nullptr)
		{
			t->ptr[pos(str[i])] = new trnode;
			
			t = t->ptr[pos(str[i])];
			t->f = 0;
			t->ptr.resize(N, nullptr);
		}
		else
			t = t->ptr[pos(str[i])];
	}

	t->f = 1;
}

bool any_other(trptr t, char ch, int tag)
{
	if(tag)
	{
		for(int i = 0; i < N; i++)
			if(t->ptr[i] != nullptr && i != pos(ch))
				return true;
	}
	else
	{
		for(int i = 0; i < N; i++)
			if(t->ptr[i] != nullptr)
				return true;
	}

	return false;
}

int flag = 0;
void deletion(trptr& t, string str, int i)
{
	if(i == str.size())
		return;

	deletion(t->ptr[pos(str[i])], str, i+1);

	if(flag)
		return;

	if(t->f)
	{
		flag = 1;
		return;
	}

	if(any_other(t, str[i], 1))
	{
		trptr temp = t->ptr[pos(str[i])];
		t->ptr[pos(str[i])] = nullptr;

		delete temp;
		flag = 1;
	}
	else
	{
		trptr temp = t;
		t = nullptr;
		delete temp;
	}
}

void display(trptr t)
{
	if(t == nullptr)
		return;

	trptr temp = new trnode;
	temp->f = 5;

	queue<trptr> q;
	q.push(t);
	q.push(temp);

	while(!q.empty())
	{
		trptr t1 = q.front();
		q.pop();

		if(t1->f == 5)
		{
			cout<<endl;

			if(!q.empty())
				q.push(temp);
		}
		else
		{
			for(int i = 0; i < N; i++)
				if(t1->ptr[i] != nullptr)
				{
					cout<<char(i+97)<<" ";
					q.push(t1->ptr[i]);
				}
		}
	}
}

int main()
{
	trptr T = new trnode;
	T->f = 0;
	T->ptr.resize(N, nullptr);
	
	string str;
	int ch, ans;

	while(1)
	{
		cout<<"\n1. Insert\n2. Display\n3. Find\n4. Delete\n5. Exit\nEnter choice: ";
		cin>>ans;

		if(ans == 1 || ans == 3 || ans == 4)
		{
			cout<<"\nEnter word: ";
			cin>>str;
		}

		if(ans == 1)
		{
			trptr t = T;
			insertion(t, str);
		}
		else if(ans == 4)
		{
			trptr t = T;
			if(retrieve(t, str))
			{
				trptr temp = T;
				for(int i = 0; i < str.size(); i++)
					temp = temp->ptr[pos(str[i])];

				if(any_other(temp, 'i', 0))
					temp->f = 0;

				else
				{
					flag = 0;
					deletion(t, str, 0);
				}

				cout<<"\nDeleted.";
			}
			else
				cout<<"\nNot found";
		}
		else if(ans == 3)
		{
			if(retrieve(T, str))
				cout<<"\nFound";
			else
				cout<<"\nNot found";
		}
		else if(ans == 2)
			display(T);
		else
			exit(0);
	}

	return 0;
}
